{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1","program":"/Users/tanks/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","state","/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=1c4a5c2e2550eec2","-C","extra-filename=-1c4a5c2e2550eec2","--out-dir","/Users/tanks/Projects/squares-api/target/rls/debug/deps","-L","dependency=/Users/tanks/Projects/squares-api/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/tanks/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/tanks/Projects/squares-api/target/rls/debug/deps/libstate-1c4a5c2e2550eec2.rmeta"},"prelude":{"crate_id":{"name":"state","disambiguator":[1560547696769003002,7342162042295940950]},"crate_root":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src","external_crates":[{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8779741827445714399,2971442221542141864]}},{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[7813189136024418800,78221803746871164]}},{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16521422805528300375,16247103097443080165]}},{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6928156699021243209,6323046913247974479]}},{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4811915239047079672,8708313805612610773]}},{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[13085082768306091680,910093795681734952]}},{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[2050644147766463415,2002930350033655713]}},{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14957238024130938343,16286068292701033760]}},{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2942731912066483547,10101170281504604302]}},{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8070830940391524888,2695343388122831199]}},{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[12638767748722904428,1875285310507904094]}},{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[1627492573080997141,12282998569957683394]}},{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/lib.rs","num":13,"id":{"name":"backtrace_sys","disambiguator":[14201820458053457770,5396282292866328666]}},{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[15969411139319329997,10460457787527223378]}}],"span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/lib.rs","byte_start":0,"byte_end":8168,"line_start":1,"line_end":250,"column_start":1,"column_end":51}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":38},"span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/lib.rs","byte_start":8081,"byte_end":8090,"line_start":248,"line_end":248,"column_start":20,"column_end":29},"alias_span":null,"name":"Container","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":66},"span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/lib.rs","byte_start":8109,"byte_end":8116,"line_start":249,"line_end":249,"column_start":18,"column_end":25},"alias_span":null,"name":"Storage","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/lib.rs","byte_start":0,"byte_end":8168,"line_start":1,"line_end":250,"column_start":1,"column_end":51},"name":"","qualname":"::","value":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":25},{"krate":0,"index":61},{"krate":0,"index":94},{"krate":0,"index":106},{"krate":0,"index":107}],"decl_id":null,"docs":" # state - safe and effortless state management","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":38},"span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/container.rs","byte_start":12223,"byte_end":12232,"line_start":89,"line_end":89,"column_start":12,"column_end":21},"name":"Container","qualname":"::container::Container","value":"Container {  }","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42}],"decl_id":null,"docs":" A container for global type-based state.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/container.rs","byte_start":12762,"byte_end":12765,"line_start":108,"line_end":108,"column_start":16,"column_end":19},"name":"new","qualname":"<Container>::new","value":"fn () -> Container","parent":null,"children":[],"decl_id":null,"docs":" Creates a new container with no stored values.","sig":null,"attributes":[{"value":"cfg(not (feature = \"const_fn\"))","span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/lib.rs","byte_start":7820,"byte_end":7853,"line_start":234,"line_end":234,"column_start":9,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/container.rs","byte_start":14727,"byte_end":14733,"line_start":168,"line_end":168,"column_start":12,"column_end":18},"name":"freeze","qualname":"<Container>::freeze","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Freezes the container. A frozen container disallows writes allowing for\n synchronization-free reads.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/container.rs","byte_start":14698,"byte_end":14715,"line_start":167,"line_end":167,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/container.rs","byte_start":15265,"byte_end":15274,"line_start":187,"line_end":187,"column_start":12,"column_end":21},"name":"is_frozen","qualname":"<Container>::is_frozen","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the container is frozen and `false` otherwise.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/container.rs","byte_start":15236,"byte_end":15253,"line_start":186,"line_end":186,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/container.rs","byte_start":16104,"byte_end":16107,"line_start":212,"line_end":212,"column_start":12,"column_end":15},"name":"set","qualname":"<Container>::set","value":"fn <T> (&self, state: T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Sets the global state for type `T` if it has not been set before and\n `self` is not frozen.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/container.rs","byte_start":16083,"byte_end":16092,"line_start":211,"line_end":211,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/container.rs","byte_start":17464,"byte_end":17471,"line_start":256,"line_end":256,"column_start":12,"column_end":19},"name":"try_get","qualname":"<Container>::try_get","value":"fn <T> (&self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to retrieve the global state for type `T`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/container.rs","byte_start":17443,"byte_end":17452,"line_start":255,"line_end":255,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/container.rs","byte_start":18871,"byte_end":18874,"line_start":301,"line_end":301,"column_start":12,"column_end":15},"name":"get","qualname":"<Container>::get","value":"fn <T> (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the global state for type `T`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/container.rs","byte_start":18850,"byte_end":18859,"line_start":300,"line_end":300,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":66},"span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/storage.rs","byte_start":24298,"byte_end":24305,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"Storage","qualname":"::storage::Storage","value":"Storage {  }","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70}],"decl_id":null,"docs":" A single storage location for global access to a value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/storage.rs","byte_start":24779,"byte_end":24782,"line_start":70,"line_end":70,"column_start":16,"column_end":19},"name":"new","qualname":"<Storage<T>>::new","value":"fn () -> Storage<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, uninitialized storage location.","sig":null,"attributes":[{"value":"cfg(not (feature = \"const_fn\"))","span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/lib.rs","byte_start":7820,"byte_end":7853,"line_start":234,"line_end":234,"column_start":9,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/storage.rs","byte_start":25545,"byte_end":25548,"line_start":95,"line_end":95,"column_start":12,"column_end":15},"name":"set","qualname":"<Storage<T>>::set","value":"fn (&self, value: T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for this storage unit to `value` if it has not already\n been set before.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/storage.rs","byte_start":26379,"byte_end":26386,"line_start":127,"line_end":127,"column_start":12,"column_end":19},"name":"try_get","qualname":"<Storage<T>>::try_get","value":"fn (&self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to borrow the value in this storage location.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/storage.rs","byte_start":26358,"byte_end":26367,"line_start":126,"line_end":126,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/storage.rs","byte_start":27105,"byte_end":27108,"line_start":156,"line_end":156,"column_start":12,"column_end":15},"name":"get","qualname":"<Storage<T>>::get","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Borrows the value in this storage location.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/storage.rs","byte_start":27084,"byte_end":27093,"line_start":155,"line_end":155,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/storage.rs","byte_start":27681,"byte_end":27691,"line_start":174,"line_end":174,"column_start":12,"column_end":22},"name":"get_or_set","qualname":"<Storage<T>>::get_or_set","value":"fn <F> (&self, from: F) -> &T","parent":null,"children":[],"decl_id":null,"docs":" If the storage location has not yet been set, it is set to the return\n value of `from`. Returns a borrow to the value in this storage location.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/storage.rs","byte_start":27660,"byte_end":27669,"line_start":173,"line_end":173,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/ident_hash.rs","byte_start":8508,"byte_end":8517,"line_start":9,"line_end":9,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/ident_hash.rs","byte_start":8863,"byte_end":8872,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/container.rs","byte_start":12390,"byte_end":12399,"line_start":96,"line_end":96,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/container.rs","byte_start":21971,"byte_end":21980,"line_start":390,"line_end":390,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/container.rs","byte_start":22007,"byte_end":22016,"line_start":391,"line_end":391,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/container.rs","byte_start":22037,"byte_end":22046,"line_start":393,"line_end":393,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/storage.rs","byte_start":24443,"byte_end":24450,"line_start":58,"line_end":58,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/storage.rs","byte_start":27930,"byte_end":27937,"line_start":184,"line_end":184,"column_start":48,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/storage.rs","byte_start":27994,"byte_end":28001,"line_start":186,"line_end":186,"column_start":48,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/storage.rs","byte_start":28070,"byte_end":28077,"line_start":188,"line_end":188,"column_start":60,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/storage.rs","byte_start":28346,"byte_end":28353,"line_start":197,"line_end":197,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/storage.rs","byte_start":28546,"byte_end":28553,"line_start":205,"line_end":205,"column_start":50,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/storage.rs","byte_start":28773,"byte_end":28780,"line_start":214,"line_end":214,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/init.rs","byte_start":29139,"byte_end":29143,"line_start":8,"line_end":8,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/ident_hash.rs","byte_start":8508,"byte_end":8517,"line_start":9,"line_end":9,"column_start":17,"column_end":26},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":15},"to":{"krate":2,"index":6835}},{"span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/ident_hash.rs","byte_start":8863,"byte_end":8872,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":15},"to":{"krate":2,"index":2189}},{"span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/container.rs","byte_start":12390,"byte_end":12399,"line_start":96,"line_end":96,"column_start":6,"column_end":15},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":38},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/container.rs","byte_start":21971,"byte_end":21980,"line_start":390,"line_end":390,"column_start":22,"column_end":31},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":38},"to":{"krate":2,"index":1545}},{"span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/container.rs","byte_start":22007,"byte_end":22016,"line_start":391,"line_end":391,"column_start":22,"column_end":31},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":38},"to":{"krate":2,"index":1535}},{"span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/container.rs","byte_start":22037,"byte_end":22046,"line_start":393,"line_end":393,"column_start":15,"column_end":24},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":38},"to":{"krate":2,"index":1726}},{"span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/storage.rs","byte_start":24443,"byte_end":24450,"line_start":58,"line_end":58,"column_start":32,"column_end":39},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":66},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/storage.rs","byte_start":27930,"byte_end":27937,"line_start":184,"line_end":184,"column_start":48,"column_end":55},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":1545}},{"span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/storage.rs","byte_start":27994,"byte_end":28001,"line_start":186,"line_end":186,"column_start":48,"column_end":55},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":1535}},{"span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/storage.rs","byte_start":28070,"byte_end":28077,"line_start":188,"line_end":188,"column_start":60,"column_end":67},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":7185}},{"span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/storage.rs","byte_start":28346,"byte_end":28353,"line_start":197,"line_end":197,"column_start":44,"column_end":51},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/storage.rs","byte_start":28546,"byte_end":28553,"line_start":205,"line_end":205,"column_start":50,"column_end":57},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":2164}},{"span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/storage.rs","byte_start":28773,"byte_end":28780,"line_start":214,"line_end":214,"column_start":41,"column_end":48},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":1726}},{"span":{"file_name":"/Users/tanks/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.1/src/init.rs","byte_start":29139,"byte_end":29143,"line_start":8,"line_end":8,"column_start":6,"column_end":10},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":98},"to":{"krate":4294967295,"index":4294967295}}]}